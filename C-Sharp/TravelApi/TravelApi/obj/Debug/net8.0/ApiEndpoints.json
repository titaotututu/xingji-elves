[
  {
    "ContainingType": "TravelApi.Controllers.ChatController",
    "Method": "CreateChatRecord",
    "RelativePath": "api/Chat/record",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatRecord",
        "Type": "TravelApi.Models.ChatRecord",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.ChatRecord",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.ChatController",
    "Method": "GetChatRecord",
    "RelativePath": "api/Chat/record/{recordId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "recordId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.ChatRecord",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.ChatController",
    "Method": "DeleteChatRecord",
    "RelativePath": "api/Chat/record/{recordId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "recordId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.ChatController",
    "Method": "AddChatMessage",
    "RelativePath": "api/Chat/record/{recordId}/message",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "recordId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "message",
        "Type": "TravelApi.Models.ChatMessage",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.ChatMessage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.ChatController",
    "Method": "GetChatMessages",
    "RelativePath": "api/Chat/record/{recordId}/messages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "recordId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TravelApi.Models.ChatMessage, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.ChatController",
    "Method": "GetUserChatRecords",
    "RelativePath": "api/Chat/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TravelApi.Models.ChatRecord, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.FileController",
    "Method": "Delete",
    "RelativePath": "api/File/delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "fileName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.FileController",
    "Method": "Download",
    "RelativePath": "api/File/download",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fileName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.FileController",
    "Method": "Upload",
    "RelativePath": "api/File/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.JournalController",
    "Method": "AddJournal",
    "RelativePath": "api/Journal",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journal",
        "Type": "TravelApi.Models.Journal",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Journal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.JournalController",
    "Method": "DeleteJournal",
    "RelativePath": "api/Journal/delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.JournalController",
    "Method": "GetJournal",
    "RelativePath": "api/Journal/get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Journal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.JournalController",
    "Method": "GetJournalByUser",
    "RelativePath": "api/Journal/getByUser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.Journal, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.JournalController",
    "Method": "UpdateJournal",
    "RelativePath": "api/Journal/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "journal",
        "Type": "TravelApi.Models.Journal",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Journal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TodoItemController",
    "Method": "AddTodo",
    "RelativePath": "api/TodoItem",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "item",
        "Type": "TravelApi.Models.TodoItem",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.TodoItem",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TodoItemController",
    "Method": "DeleteRoute",
    "RelativePath": "api/TodoItem/delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "itemId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.TodoItemController",
    "Method": "GetRoute",
    "RelativePath": "api/TodoItem/get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "travelId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.TodoItem, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TodoItemController",
    "Method": "UpdateRoute",
    "RelativePath": "api/TodoItem/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "itemid",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "todo",
        "Type": "TravelApi.Models.TodoItem",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.TodoItem",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TravelController",
    "Method": "AddTravel",
    "RelativePath": "api/Travel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "travel",
        "Type": "Travel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Travel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TravelController",
    "Method": "DeleteTravel",
    "RelativePath": "api/Travel/delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "travelId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.TravelController",
    "Method": "GetTravel",
    "RelativePath": "api/Travel/get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "uid",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Travel, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TravelController",
    "Method": "UpdateTravel",
    "RelativePath": "api/Travel/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "travelId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "travel",
        "Type": "Travel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Travel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.TravelController",
    "Method": "GetTravelById",
    "RelativePath": "api/Travel/{travelId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "travelId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Travel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.UserController",
    "Method": "CheckLogin",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "pwd",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.UserController",
    "Method": "PostUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "TravelApi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.UserController",
    "Method": "GetUserByName",
    "RelativePath": "api/User/name",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.User, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TravelApi.Controllers.UserController",
    "Method": "ModifyUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "TravelApi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TravelApi.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "CreateFeedback",
    "RelativePath": "api/python/feedback",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedback",
        "Type": "TravelApi.Models.Feedback",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Feedback",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetUserFeedbacks",
    "RelativePath": "api/python/feedback/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.Feedback, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "UpdateFeedbackStatus",
    "RelativePath": "api/python/feedback/{feedbackId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedbackId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "statusUpdate",
        "Type": "System.Collections.Generic.Dictionary\u00602[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetAllFeedbacks",
    "RelativePath": "api/python/feedbacks",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.Feedback, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "CreateJournal",
    "RelativePath": "api/python/journal",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journal",
        "Type": "TravelApi.Models.Journal",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Journal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetJournalImage",
    "RelativePath": "api/python/journal/image/{journalId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PythonController",
    "Method": "ClearJournalImages",
    "RelativePath": "api/python/journal/image/{journalId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetJournal",
    "RelativePath": "api/python/journal/{journalId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Journal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "UpdateJournal",
    "RelativePath": "api/python/journal/{journalId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "journal",
        "Type": "TravelApi.Models.Journal",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.Journal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "DeleteJournal",
    "RelativePath": "api/python/journal/{journalId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PythonController",
    "Method": "UploadJournalImage",
    "RelativePath": "api/python/journal/{journalId}/image",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journalId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetAllJournals",
    "RelativePath": "api/python/journals",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.Journal, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetUserJournals",
    "RelativePath": "api/python/journals/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.Journal, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "RegisterUser",
    "RelativePath": "api/python/user",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "TravelApi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "Login",
    "RelativePath": "api/python/user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "password",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetUser",
    "RelativePath": "api/python/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "UpdateUser",
    "RelativePath": "api/python/user/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "TravelApi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TravelApi.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PythonController",
    "Method": "DeleteUser",
    "RelativePath": "api/python/user/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PythonController",
    "Method": "GetAllUsers",
    "RelativePath": "api/python/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TravelApi.Models.User, TravelApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]